<?php

/*
 * This file is part of the dinCachePlugin package.
 * (c) DineCat, 2010 http://dinecat.com/
 * 
 * For the full copyright and license information, please view the LICENSE file,
 * that was distributed with this package, or see http://www.dinecat.com/din/license.html
 */

/**
 * Cache routing config handler
 * 
 * @package     dinCachePlugin
 * @subpackage  lib.config
 * @author      Nicolay N. Zyk <relo.san@gmail.com>
 */
class dinCacheRoutingConfigHandler extends sfYamlConfigHandler
{

    /**
     * Executes this configuration handler
     * 
     * @param   array   $configFiles    An array of absolute filesystem path to a configuration file
     * @return  string  Data to be written to a cache file
     */
    public function execute( $configFiles )
    {

        $options = $this->getOptions();

        $data = array();
        $data[] = sprintf( '$this->defaults = %s;', $this->asPhp( $options['defaults'] ) );

        $config = $this->parse( $configFiles );
        foreach ( $config['routes'] as $name => $routeConfig )
        {
            $data[] = sprintf( '$this->routes[\'%s\'] = %s;', $name, $this->asPhp( $routeConfig ) );
        }

        foreach ( $config['links'] as $model => $routes )
        {
            $data[] = sprintf( '$this->links[\'%s\'] = %s;', $model, $this->asPhp( $routes ) );
            $data[] = sprintf(
                '$this->trans[\'%s\'] = %s;', $model,
                Doctrine::getTable( $model )->hasRelation( 'Translation' ) ? 'true' : 'false'
            );
        }

        return sprintf(
            "<?php\n// auto-generated by dinCacheRoutingConfigHandler\n// date: %s\n%s\n",
            date( 'Y/m/d H:i:s' ), implode( "\n", $data )
        );

    } // dinCacheRoutingConfigHandler::execute()


    /**
     * Get factory (default for routes) options
     * 
     * @return  string  Config factory options
     */
    protected function getOptions()
    {

        $config = sfFactoryConfigHandler::getConfiguration(
            sfContext::getInstance()->getConfiguration()->getConfigPaths( 'config/factories.yml' )
        );
        return $config['cache_manager']['param'];

    } // dinCacheRoutingConfigHandler::getOptions()


    /**
     * Parse configs
     * 
     * @param   array   $configFiles    An array of absolute filesystem path to a configuration file
     * @return  array   Parsed routes config
     */
    protected function parse( $configFiles )
    {

        $config = self::parseYamls( $configFiles );
        if ( !isset( $config['routes'] ))
        {
            $config['routes'] = array();
        }
        if ( !isset( $config['links'] ))
        {
            $config['links'] = array();
        }
        return $config;

    } // dinCacheRoutingConfigHandler::parse()


    /**
     * Represent array as php code
     * 
     * @param   array   $array  Config array
     * @return  string  Php code
     */
    public function asPhp( $array )
    {

        return str_replace(
            array( "\n", 'array (' ), array( '', 'array(' ), var_export( $array, true )
        );

    } // dinCacheRoutingConfigHandler::asPhp()

} // dinCacheRoutingConfigHandler

//EOF